[gd_scene load_steps=10 format=2]

[ext_resource path="res://core/DialogueStarter.tscn" type="PackedScene" id=1]
[ext_resource path="res://core/PlayerManagedStateManager.tscn" type="PackedScene" id=2]
[ext_resource path="res://core/ActorManagedStateManager.tscn" type="PackedScene" id=3]
[ext_resource path="res://cutscenes/dialogue/CutsceneDialogue.tscn" type="PackedScene" id=4]
[ext_resource path="res://actor_states/ManagedState.tscn" type="PackedScene" id=5]

[sub_resource type="Animation" id=1]
resource_name = "0"
length = 3.0
tracks/0/type = "method"
tracks/0/path = NodePath("PlayerManagedStateManager")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "disable_input"
} ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("Dialogues/DialogueStarter")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 2.9 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "start"
} ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("PlayerManagedStateManager")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "disable_activation_scanner"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("NPCManagedStateManager:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.5, 2.2, 2.7 ),
"transitions": PoolRealArray( 1, 0.554785, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( -256, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("PlayerManagedStateManager:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.9, 1.3 ),
"transitions": PoolRealArray( 0.435275, 1 ),
"update": 0,
"values": [ Vector2( -768, 0 ), Vector2( -576, 0 ) ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("NPCManagedStateManager")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.5, 2.2, 2.7 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"values": [ {
"args": [ "stand" ],
"method": "play_animation"
}, {
"args": [ "walk" ],
"method": "play_animation"
}, {
"args": [ "stand" ],
"method": "play_animation"
} ]
}
tracks/6/type = "method"
tracks/6/path = NodePath("PlayerManagedStateManager")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0.5, 0.9, 1.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"values": [ {
"args": [ "walk" ],
"method": "play_animation"
}, {
"args": [ "stand" ],
"method": "play_animation"
}, {
"args": [ "" ],
"method": "play_animation"
} ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("NPCManagedStateManager:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/8/type = "animation"
tracks/8/path = NodePath("CanvasLayer/TransitionColor/AnimationPlayer")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"clips": PoolStringArray( "to_color", "from_color" ),
"times": PoolRealArray( 0, 0.6 )
}
tracks/9/type = "method"
tracks/9/path = NodePath("NPCManagedStateManager")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "enable"
} ]
}
tracks/10/type = "value"
tracks/10/path = NodePath("NPCManagedStateManager:rotation_degrees")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/keys = {
"times": PoolRealArray( 0.5, 1.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0.0, 180.0 ]
}

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("NPCManagedStateManager:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=3]
length = 0.5
tracks/0/type = "method"
tracks/0/path = NodePath("PlayerManagedStateManager")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "enable_input"
} ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("PlayerManagedStateManager")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "idle" ],
"method": "play_animation"
} ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("PlayerManagedStateManager")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "enable_activation_scanner"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("NPCManagedStateManager:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="GDScript" id=4]
script/source = "extends AnimationPlayer

func play(var name : String =\"\", var custom_blend : float =-1, var custom_speed : float = 1.0, var from_end : bool = false ) -> void:
	.play(name, custom_blend, custom_speed, from_end)
"

[node name="NPCDialogueInteraction" instance=ExtResource( 4 )]

[node name="AnimationPlayer" parent="." index="0"]
anims/0 = SubResource( 1 )
anims/SETUP = SubResource( 2 )
anims/end = SubResource( 3 )
script = SubResource( 4 )

[node name="DialogueStarter" parent="Dialogues" index="0" instance=ExtResource( 1 )]

[node name="PlayerManagedStateManager" parent="." index="2" instance=ExtResource( 2 )]
managed_state = ExtResource( 5 )

[node name="NPCManagedStateManager" parent="." index="3" instance=ExtResource( 3 )]
managed_state = ExtResource( 5 )
